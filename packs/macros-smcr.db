{"_id":"0EkcYiYSFXvCzzzT","name":"ScorchingRayGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.5HM0LaKi9P8LmFqo"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Green_Thumb.webp","actorIds":[]}
{"_id":"2tZvhWx82JkmQnf4","name":"MagicMissileBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.x8jHCMPkE6bf3UCV"}},"scope":"global","command":"/// This macro pulls from the JB2A list of Blue Magic Missiles to throw 3 random animations at targeted tokens\n// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n// Sets files for random pulls\n// Base file path followed by file names\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/\";\nlet mmA = `${file}MagicMissile_01_Regular_Blue_30ft_01_1600x400.webm`;\nlet mmB = `${file}MagicMissile_01_Regular_Blue_30ft_02_1600x400.webm`;\nlet mmC = `${file}MagicMissile_01_Regular_Blue_30ft_03_1600x400.webm`;\nlet mmD = `${file}MagicMissile_01_Regular_Blue_30ft_04_1600x400.webm`;\nlet mmE = `${file}MagicMissile_01_Regular_Blue_30ft_05_1600x400.webm`;\nlet mmF = `${file}MagicMissile_01_Regular_Blue_30ft_06_1600x400.webm`;\nlet mmG = `${file}MagicMissile_01_Regular_Blue_30ft_07_1600x400.webm`;\nlet mmH = `${file}MagicMissile_01_Regular_Blue_30ft_08_1600x400.webm`;\nlet mmI = `${file}MagicMissile_01_Regular_Blue_30ft_09_1600x400.webm`;\n\nlet mmAA = `${file}MagicMissile_01_Regular_Blue_60ft_01_2800x400.webm`;\nlet mmBB = `${file}MagicMissile_01_Regular_Blue_60ft_02_2800x400.webm`;\nlet mmCC = `${file}MagicMissile_01_Regular_Blue_60ft_03_2800x400.webm`;\nlet mmDD = `${file}MagicMissile_01_Regular_Blue_60ft_04_2800x400.webm`;\nlet mmEE = `${file}MagicMissile_01_Regular_Blue_60ft_05_2800x400.webm`;\nlet mmFF = `${file}MagicMissile_01_Regular_Blue_60ft_06_2800x400.webm`;\nlet mmGG = `${file}MagicMissile_01_Regular_Blue_60ft_07_2800x400.webm`;\nlet mmHH = `${file}MagicMissile_01_Regular_Blue_60ft_08_2800x400.webm`;\nlet mmII = `${file}MagicMissile_01_Regular_Blue_60ft_09_2800x400.webm`;\n\nfunction random_itemA(itemsA)\n{\nreturn itemsA[Math.floor(Math.random()*itemsA.length)];\n}\n\nvar itemsA = [mmA, mmB, mmC, mmD, mmE, mmF, mmG, mmH, mmI];\n\nfunction random_itemB(itemsB)\n{\nreturn itemsB[Math.floor(Math.random()*itemsB.length)];\n}\n\nvar itemsB = [mmAA, mmBB, mmCC, mmDD, mmEE, mmFF, mmGG, mmHH, mmII];\nconst sleepNow = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\nlet anFile = random_itemA(itemsA);\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile = random_itemA(itemsA);\n    anchorX = 0.125;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = random_itemB(itemsB);\n    anchorX = 0.071;\n    break;\n}\n\nlet anFile2 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):    \n    anFileSize = 1200;\n    anFile2 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile2 = random_itemB(itemsB);\n    break;\n}\n\nlet anFile3 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile3 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile3 = random_itemB(itemsB);\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=600){anScaleY = 0.6}\nif (anDist>=700 && anDist <=1800){anScaleY = 0.8}\nif (anDist>1800 && anDist <=2000){anScaleY = 0.6}\nif (anDist>2000){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim2 = \n                    {\n                     file: anFile2,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim3 = \n                    {\n                     file: anFile3,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n/// plays sounds at same interval as missiles\n/*\nfunction mm_audio(number){\n    let soundHome = \"sound folder path here\";\n    let soundFile = [\n        `sound file 1 here`,\n        `sound file 2 here`,\n        `sound file 2 here`\n    ];\n    let x = number;\n    let interval = 500;\n    for (var i = 0; i < x; i++) {\n        setTimeout(function () {\n            let random = Math.floor(Math.random() * (soundFile.length));\n            AudioHelper.play({src: soundHome + soundFile[random], volume: 0.3, autoplay: true, loop: false}, true);\n        }, i * interval);\n    }\n}\nmm_audio(3);\n*/\nawait sleepNow(500);\ncanvas.fxmaster.playVideo(spellAnim2);\ngame.socket.emit('module.fxmaster', spellAnim2);\nawait sleepNow(500);\ncanvas.fxmaster.playVideo(spellAnim3);\ngame.socket.emit('module.fxmaster', spellAnim3);\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n      }\n    }\n}];\nawait sleepNow(10);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait sleepNow(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/MagicMissile_01_Regular_Blue_Thumb.webp","actorIds":[]}
{"_id":"3SxuruGRhWf3RKwv","name":"ScorchingRayRed","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.RhMcTwX75ptJmodT"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Red_Thumb.webp","actorIds":[]}
{"_id":"6IthTcNkAUvXcl27","name":"ThunderWaveRed-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Dark_Red_Bmid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Dark_Red_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Dark_Red_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Dark_Red_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Dark_Red_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Dark_Red_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xC10000,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Dark_Red_BMid_Thumb.webp","actorIds":[]}
{"_id":"7LBkjILmc4te2IZL","name":"HealingGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.rmvUlKiTed1tYSrl"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Green_200x200.webm\",\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0x7BDA35,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Green_Thumb.webp","actorIds":[]}
{"_id":"7WRP1lZJIJ03UpyY","name":"WitchboltYellow","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gpF9ZmXjY7TSQZXY"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/\";\n\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}WitchBolt_01_Regular_Yellow_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}WitchBolt_01_Regular_Yellow_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}WitchBolt_01_Regular_Yellow_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\nlet params =\n[{\n    filterType: \"electric\",\n// Can change color in hex format\n    color: 0x500087,\n    time: 0,\n    blend: 2,\n    intensity: 5,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n    let interval = 4000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n// Add Sound in the loop\n/*\n               let soundFile = `sound path and file here`;\n               AudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n         }, i * interval);\n    }\nawait wait (interval * x);\n// Removes TMFX after animation loops\n/*\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n// The number in parenthesis sets the number of times the animation loops\nSpellAnimation(1)\n\n// Adds TMFX to target\n/*\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/WitchBolt_01_Regular_Yellow_Thumb.webp","actorIds":[]}
{"_id":"88JUYaZSBWtpV5v4","name":"DisintegratePurpleBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.qaU6l1AuKrRD9ijC"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/6th_Level/Disintegrate/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}Disintegrate_01_Regular_PurpleBlue_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}Disintegrate_01_Regular_PurpleBlue_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}Disintegrate_01_Regular_PurpleBlue_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}Disintegrate_01_Regular_PurpleBlue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"fire\",\n    filterId: \"myFire\",\n    intensity: 3,\n    color: 0xFFFFFF,\n    amplitude: 2,\n    time: 0,\n    blend: 10,\n    fireBlend : 1,\n    alphaDiscard: true,\n    zOrder: 50,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0024, \n        animType: \"move\" \n      }\n    }\n},{\n    filterType: \"glow\",\n    filterId: \"glowripples\",\n    outerStrength: 4,\n    innerStrength: 2,\n// Change color here in hex\n    color: 0x7E00AD,\n    quality: 0.5,\n    padding: 10,\n    zOrder: 100,\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/6th_Level/Disintegrate/Disintegrate_01_Regular_PurpleBlue_Thumb.webp","actorIds":[]}
{"_id":"8pgft0pMZiXN19uE","name":"ShatterPurple","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.H6sGjDvEYhrG0rxN"}},"scope":"global","command":"// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast () {\n\n//Finds the center of the placed circular template and plays an animation using FXMaster\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n// Scaled globally, change divisor for different size animation.\n    let Scale = canvas.scene.data.grid/90;\n// Defines the spell template for FXMaster\n    let spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Purple_400x400.webm\",\n                      position: template.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    }; \n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 1000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\n// The number in parenthesis sets the number of times it loops\nSpellAnimation(3)\n\n// Add some sound\n/*\nawait wait (200);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xBF0099,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(1400);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Purple_Thumb.webp","actorIds":[]}
{"_id":"AHZwEfZlbfLDdFFE","name":"ScorchingRayBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.oswp8Yd1TnpqUy8m"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}SScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}SScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}SScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}SScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Blue_Thumb.webp","actorIds":[]}
{"_id":"C7urHUvHi4VEO2rb","name":"ThunderWavePurple-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Dark_Purple_Bmid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Dark_Purple_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Dark_Purple_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Dark_Purple_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Dark_Purple_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Dark_Purple_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xA90092,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Dark_Purple_BMid_Thumb.webp","actorIds":[]}
{"_id":"DjI0nMNDnZkCiJmY","name":"DisintegrateOrangePink","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kCyhpxaDJxgpmFGG"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/6th_Level/Disintegrate/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}Disintegrate_01_Regular_OrangePink_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}Disintegrate_01_Regular_OrangePink_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}Disintegrate_01_Regular_OrangePink_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}Disintegrate_01_Regular_OrangePink_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"fire\",\n    filterId: \"myFire\",\n    intensity: 3,\n    color: 0xFFFFFF,\n    amplitude: 2,\n    time: 0,\n    blend: 10,\n    fireBlend : 1,\n    alphaDiscard: true,\n    zOrder: 50,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0024, \n        animType: \"move\" \n      }\n    }\n},{\n    filterType: \"glow\",\n    filterId: \"glowripples\",\n    outerStrength: 4,\n    innerStrength: 2,\n// Change color here in hex\n    color: 0xFF5858,\n    quality: 0.5,\n    padding: 10,\n    zOrder: 100,\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/6th_Level/Disintegrate/Disintegrate_01_Regular_OrangePink_Thumb.webp","actorIds":[]}
{"_id":"EHq5Eu5qA942IljT","name":"ShatterBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.Mg2c1GtQFKdk292h"}},"scope":"global","command":"// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast () {\n\n//Finds the center of the placed circular template and plays an animation using FXMaster\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n// Scaled globally, change divisor for different size animation.\n    let Scale = canvas.scene.data.grid/90;\n// Defines the spell template for FXMaster\n    let spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Blue_400x400.webm\",\n                      position: template.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    }; \n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 1000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\n// The number in parenthesis sets the number of times it loops\nSpellAnimation(3)\n\n// Add some sound\n/*\nawait wait (200);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0x0075B0,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(1400);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Blue_Thumb.webp","actorIds":[]}
{"_id":"ExBKgnLpvEwf7O2z","name":"ShatterRed","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.SKSTvUknz94eSCie"}},"scope":"global","command":"// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast () {\n\n//Finds the center of the placed circular template and plays an animation using FXMaster\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n// Scaled globally, change divisor for different size animation.\n    let Scale = canvas.scene.data.grid/90;\n// Defines the spell template for FXMaster\n    let spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Red_400x400.webm\",\n                      position: template.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    }; \n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 1000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\n// The number in parenthesis sets the number of times it loops\nSpellAnimation(3)\n\n// Add some sound\n/*\nawait wait (200);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xBF0000,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(1400);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Red_Thumb.webp","actorIds":[]}
{"_id":"GE5wzqheCRzJ30ba","name":"ShatterGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.nbZzCBaGaYl0NhrV"}},"scope":"global","command":"// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast () {\n\n//Finds the center of the placed circular template and plays an animation using FXMaster\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n// Scaled globally, change divisor for different size animation.\n    let Scale = canvas.scene.data.grid/90;\n// Defines the spell template for FXMaster\n    let spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Green_400x400.webm\",\n                      position: template.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    }; \n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 1000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\n// The number in parenthesis sets the number of times it loops\nSpellAnimation(3)\n\n// Add some sound\n/*\nawait wait (200);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0x0EB400,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(1400);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Green_Thumb.webp","actorIds":[]}
{"_id":"GbKbID5itNa86DOw","name":"ShatterOrange","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.CfUM7uZqXYTHcM4O"}},"scope":"global","command":"// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast () {\n\n//Finds the center of the placed circular template and plays an animation using FXMaster\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n// Scaled globally, change divisor for different size animation.\n    let Scale = canvas.scene.data.grid/90;\n// Defines the spell template for FXMaster\n    let spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Orange_400x400.webm\",\n                      position: template.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    }; \n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 1000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\n// The number in parenthesis sets the number of times it loops\nSpellAnimation(3)\n\n// Add some sound\n/*\nawait wait (200);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xBF6E00,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(1400);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Shatter/Shatter_01_Orange_Thumb.webp","actorIds":[]}
{"_id":"HVH4ItZYPujHyG1c","name":"RayofFrost_Blue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"furnace":{"runAsGM":false},"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.IHti68rYGIVejpF9"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}SScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}SScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}SScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}SScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/RayOfFrost_01_Regular_Blue_Thumb.webp","actorIds":[]}
{"_id":"IoiXCxaBt62pNJA7","name":"FireBoltBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.cH9DEbg0E8WnLcpc"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}FireBolt_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}FireBolt_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}FireBolt_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}FireBolt_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/FireBolt_01_Regular_Blue_Thumb.webp","actorIds":[]}
{"_id":"JdzImOqQVrN7LDH4","name":"WitchboltDarkRed","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gpF9ZmXjY7TSQZXY"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/\";\n\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}WitchBolt_01_Dark_Red_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}WitchBolt_01_Dark_Red_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}WitchBolt_01_Dark_Red_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\nlet params =\n[{\n    filterType: \"electric\",\n// Can change color in hex format\n    color: 0x500087,\n    time: 0,\n    blend: 2,\n    intensity: 5,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n    let interval = 4000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n// Add Sound in the loop\n/*\n               let soundFile = `sound path and file here`;\n               AudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n         }, i * interval);\n    }\nawait wait (interval * x);\n// Removes TMFX after animation loops\n/*\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n// The number in parenthesis sets the number of times the animation loops\nSpellAnimation(1)\n\n// Adds TMFX to target\n/*\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/WitchBolt_01_Dark_Red_Thumb.webp","actorIds":[]}
{"_id":"JtzKUYW5yRfqUagp","name":"WitchboltDarkGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gpF9ZmXjY7TSQZXY"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/\";\n\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}WitchBolt_01_Dark_Green_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}WitchBolt_01_Dark_Green_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}WitchBolt_01_Dark_Green_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\nlet params =\n[{\n    filterType: \"electric\",\n// Can change color in hex format\n    color: 0x500087,\n    time: 0,\n    blend: 2,\n    intensity: 5,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n    let interval = 4000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n// Add Sound in the loop\n/*\n               let soundFile = `sound path and file here`;\n               AudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n         }, i * interval);\n    }\nawait wait (interval * x);\n// Removes TMFX after animation loops\n/*\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n// The number in parenthesis sets the number of times the animation loops\nSpellAnimation(1)\n\n// Adds TMFX to target\n/*\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/WitchBolt_01_Dark_Green_Thumb.webp","actorIds":[]}
{"_id":"Kn77HgEwUwqbfYjH","name":"RayofFrost_Green","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.Uu3yhrmEszGEMoPL"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/RayOfFrost_01_Regular_Green_Thumb.webp","actorIds":[]}
{"_id":"LF97XRAZo0JvdAq9","name":"WitchboltRed","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gpF9ZmXjY7TSQZXY"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/\";\n\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}WitchBolt_01_Regular_Red_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}WitchBolt_01_Regular_Red_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}WitchBolt_01_Regular_Red_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\nlet params =\n[{\n    filterType: \"electric\",\n// Can change color in hex format\n    color: 0x500087,\n    time: 0,\n    blend: 2,\n    intensity: 5,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n    let interval = 4000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n// Add Sound in the loop\n/*\n               let soundFile = `sound path and file here`;\n               AudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n         }, i * interval);\n    }\nawait wait (interval * x);\n// Removes TMFX after animation loops\n/*\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n// The number in parenthesis sets the number of times the animation loops\nSpellAnimation(1)\n\n// Adds TMFX to target\n/*\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/WitchBolt_01_Regular_Red_Thumb.webp","actorIds":[]}
{"_id":"MB6vGQeFIS2tJlT5","name":"FireBoltPurple","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.ul4J9NdjLnRTsEX3"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}FireBolt_01_Regular_Purple_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}FireBolt_01_Regular_Purple_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}FireBolt_01_Regular_Purple_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}FireBolt_01_Regular_Purple_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xFF09E1,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/FireBolt_01_Regular_Purple_Thumb.webp","actorIds":[]}
{"_id":"MsN81FpuQ4TYNmGT","name":"ScorchingRayOrange","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gIoSflSeJaks3RgN"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Orange_Thumb.webp","actorIds":[]}
{"_id":"PGFtW45xYWPdihrb","name":"WitchboltBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gpF9ZmXjY7TSQZXY"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/\";\n\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}WitchBolt_01_Regular_Blue_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}WitchBolt_01_Regular_Blue_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}WitchBolt_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\nlet params =\n[{\n    filterType: \"electric\",\n// Can change color in hex format\n    color: 0x500087,\n    time: 0,\n    blend: 2,\n    intensity: 5,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n    let interval = 4000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n// Add Sound in the loop\n/*\n               let soundFile = `sound path and file here`;\n               AudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n         }, i * interval);\n    }\nawait wait (interval * x);\n// Removes TMFX after animation loops\n/*\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n// The number in parenthesis sets the number of times the animation loops\nSpellAnimation(1)\n\n// Adds TMFX to target\n/*\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/WitchBolt_01_Regular_Blue_Thumb.webp","actorIds":[]}
{"_id":"QCOT85ERnZa02rmo","name":"HealingYellow","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.rmvUlKiTed1tYSrl"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Yellow_200x200.webm\",\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0xE4B700,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Yellow_Thumb.webp","actorIds":[]}
{"_id":"QyCN50apNNALcIiV","name":"FireBoltGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.OYN3CFEQsFtdsQml"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}FireBolt_01_Regular_Green_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}FireBolt_01_Regular_Green_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}FireBolt_01_Regular_Green_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}FireBolt_01_Regular_Green_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0x59E81F,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/FireBolt_01_Regular_Green_Thumb.webp","actorIds":[]}
{"_id":"RHane3VftT2jshfQ","name":"DisintegrateGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.4pLmYAdYsctqIXwC"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/6th_Level/Disintegrate/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}Disintegrate_01_Regular_Green01_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}Disintegrate_01_Regular_Green01_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}Disintegrate_01_Regular_Green01_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}Disintegrate_01_Regular_Green01_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"fire\",\n    filterId: \"myFire\",\n    intensity: 3,\n    color: 0xFFFFFF,\n    amplitude: 2,\n    time: 0,\n    blend: 10,\n    fireBlend : 1,\n    alphaDiscard: true,\n    zOrder: 50,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0024, \n        animType: \"move\" \n      }\n    }\n},{\n    filterType: \"glow\",\n    filterId: \"glowripples\",\n    outerStrength: 4,\n    innerStrength: 2,\n    color: 0xBEBE00,\n    quality: 0.5,\n    padding: 10,\n    zOrder: 100,\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/6th_Level/Disintegrate/Disintegrate_01_Regular_Green01_Thumb.webp","actorIds":[]}
{"name":"MagicMissileRanColor","permission":{"default":0,"OAAx1jKOg1dYBpA6":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.x8jHCMPkE6bf3UCV"}},"scope":"global","command":"/// This macro pulls from the JB2A list of Blue Magic Missiles to throw 3 random animations at targeted tokens\n// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n// Sets files for random pulls\n// Base file path followed by file names\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/\";\n\nlet mmA1 = `${file}MagicMissile_01_Regular_Blue_30ft_01_1600x400.webm`;\nlet mmB1 = `${file}MagicMissile_01_Regular_Blue_30ft_02_1600x400.webm`;\nlet mmC1 = `${file}MagicMissile_01_Regular_Blue_30ft_03_1600x400.webm`;\nlet mmD1 = `${file}MagicMissile_01_Regular_Blue_30ft_04_1600x400.webm`;\nlet mmE1 = `${file}MagicMissile_01_Regular_Blue_30ft_05_1600x400.webm`;\nlet mmF1 = `${file}MagicMissile_01_Regular_Blue_30ft_06_1600x400.webm`;\nlet mmG1 = `${file}MagicMissile_01_Regular_Blue_30ft_07_1600x400.webm`;\nlet mmH1 = `${file}MagicMissile_01_Regular_Blue_30ft_08_1600x400.webm`;\nlet mmI1 = `${file}MagicMissile_01_Regular_Blue_30ft_09_1600x400.webm`;\n\nlet mmA2 = `${file}MagicMissile_01_Regular_Green_30ft_01_1600x400.webm`;\nlet mmB2 = `${file}MagicMissile_01_Regular_Green_30ft_02_1600x400.webm`;\nlet mmC2 = `${file}MagicMissile_01_Regular_Green_30ft_03_1600x400.webm`;\nlet mmD2 = `${file}MagicMissile_01_Regular_Green_30ft_04_1600x400.webm`;\nlet mmE2 = `${file}MagicMissile_01_Regular_Green_30ft_05_1600x400.webm`;\nlet mmF2 = `${file}MagicMissile_01_Regular_Green_30ft_06_1600x400.webm`;\nlet mmG2 = `${file}MagicMissile_01_Regular_Green_30ft_07_1600x400.webm`;\nlet mmH2 = `${file}MagicMissile_01_Regular_Green_30ft_08_1600x400.webm`;\nlet mmI2 = `${file}MagicMissile_01_Regular_Green_30ft_09_1600x400.webm`;\n\nlet mmA3 = `${file}MagicMissile_01_Regular_Purple_30ft_01_1600x400.webm`;\nlet mmB3 = `${file}MagicMissile_01_Regular_Purple_30ft_02_1600x400.webm`;\nlet mmC3 = `${file}MagicMissile_01_Regular_Purple_30ft_03_1600x400.webm`;\nlet mmD3 = `${file}MagicMissile_01_Regular_Purple_30ft_04_1600x400.webm`;\nlet mmE3 = `${file}MagicMissile_01_Regular_Purple_30ft_05_1600x400.webm`;\nlet mmF3 = `${file}MagicMissile_01_Regular_Purple_30ft_06_1600x400.webm`;\nlet mmG3 = `${file}MagicMissile_01_Regular_Purple_30ft_07_1600x400.webm`;\nlet mmH3 = `${file}MagicMissile_01_Regular_Purple_30ft_08_1600x400.webm`;\nlet mmI3 = `${file}MagicMissile_01_Regular_Purple_30ft_09_1600x400.webm`;\n\nlet mmA4 = `${file}MagicMissile_01_Regular_Yellow_30ft_01_1600x400.webm`;\nlet mmB4 = `${file}MagicMissile_01_Regular_Yellow_30ft_02_1600x400.webm`;\nlet mmC4 = `${file}MagicMissile_01_Regular_Yellow_30ft_03_1600x400.webm`;\nlet mmD4 = `${file}MagicMissile_01_Regular_Yellow_30ft_04_1600x400.webm`;\nlet mmE4 = `${file}MagicMissile_01_Regular_Yellow_30ft_05_1600x400.webm`;\nlet mmF4 = `${file}MagicMissile_01_Regular_Yellow_30ft_06_1600x400.webm`;\nlet mmG4 = `${file}MagicMissile_01_Regular_Yellow_30ft_07_1600x400.webm`;\nlet mmH4 = `${file}MagicMissile_01_Regular_Yellow_30ft_08_1600x400.webm`;\nlet mmI4 = `${file}MagicMissile_01_Regular_Yellow_30ft_09_1600x400.webm`;\n\n\n\nlet mmAA1 = `${file}MagicMissile_01_Regular_Blue_60ft_01_2800x400.webm`;\nlet mmBB1 = `${file}MagicMissile_01_Regular_Blue_60ft_02_2800x400.webm`;\nlet mmCC1 = `${file}MagicMissile_01_Regular_Blue_60ft_03_2800x400.webm`;\nlet mmDD1 = `${file}MagicMissile_01_Regular_Blue_60ft_04_2800x400.webm`;\nlet mmEE1 = `${file}MagicMissile_01_Regular_Blue_60ft_05_2800x400.webm`;\nlet mmFF1 = `${file}MagicMissile_01_Regular_Blue_60ft_06_2800x400.webm`;\nlet mmGG1 = `${file}MagicMissile_01_Regular_Blue_60ft_07_2800x400.webm`;\nlet mmHH1 = `${file}MagicMissile_01_Regular_Blue_60ft_08_2800x400.webm`;\nlet mmII1 = `${file}MagicMissile_01_Regular_Blue_60ft_09_2800x400.webm`;\n\nlet mmAA2 = `${file}MagicMissile_01_Regular_Green_60ft_01_2800x400.webm`;\nlet mmBB2 = `${file}MagicMissile_01_Regular_Green_60ft_02_2800x400.webm`;\nlet mmCC2 = `${file}MagicMissile_01_Regular_Green_60ft_03_2800x400.webm`;\nlet mmDD2 = `${file}MagicMissile_01_Regular_Green_60ft_04_2800x400.webm`;\nlet mmEE2 = `${file}MagicMissile_01_Regular_Green_60ft_05_2800x400.webm`;\nlet mmFF2 = `${file}MagicMissile_01_Regular_Green_60ft_06_2800x400.webm`;\nlet mmGG2 = `${file}MagicMissile_01_Regular_Green_60ft_07_2800x400.webm`;\nlet mmHH2 = `${file}MagicMissile_01_Regular_Green_60ft_08_2800x400.webm`;\nlet mmII2 = `${file}MagicMissile_01_Regular_Green_60ft_09_2800x400.webm`;\n\nlet mmAA3 = `${file}MagicMissile_01_Regular_Purple_60ft_01_2800x400.webm`;\nlet mmBB3 = `${file}MagicMissile_01_Regular_Purple_60ft_02_2800x400.webm`;\nlet mmCC3 = `${file}MagicMissile_01_Regular_Purple_60ft_03_2800x400.webm`;\nlet mmDD3 = `${file}MagicMissile_01_Regular_Purple_60ft_04_2800x400.webm`;\nlet mmEE3 = `${file}MagicMissile_01_Regular_Purple_60ft_05_2800x400.webm`;\nlet mmFF3 = `${file}MagicMissile_01_Regular_Purple_60ft_06_2800x400.webm`;\nlet mmGG3 = `${file}MagicMissile_01_Regular_Purple_60ft_07_2800x400.webm`;\nlet mmHH3 = `${file}MagicMissile_01_Regular_Purple_60ft_08_2800x400.webm`;\nlet mmII3 = `${file}MagicMissile_01_Regular_Purple_60ft_09_2800x400.webm`;\n\nlet mmAA4 = `${file}MagicMissile_01_Regular_Yellow_60ft_01_2800x400.webm`;\nlet mmBB4 = `${file}MagicMissile_01_Regular_Yellow_60ft_02_2800x400.webm`;\nlet mmCC4 = `${file}MagicMissile_01_Regular_Yellow_60ft_03_2800x400.webm`;\nlet mmDD4 = `${file}MagicMissile_01_Regular_Yellow_60ft_04_2800x400.webm`;\nlet mmEE4 = `${file}MagicMissile_01_Regular_Yellow_60ft_05_2800x400.webm`;\nlet mmFF4 = `${file}MagicMissile_01_Regular_Yellow_60ft_06_2800x400.webm`;\nlet mmGG4 = `${file}MagicMissile_01_Regular_Yellow_60ft_07_2800x400.webm`;\nlet mmHH4 = `${file}MagicMissile_01_Regular_Yellow_60ft_08_2800x400.webm`;\nlet mmII4 = `${file}MagicMissile_01_Regular_Yellow_60ft_09_2800x400.webm`;\n\nfunction random_itemA(itemsA)\n{\nreturn itemsA[Math.floor(Math.random()*itemsA.length)];\n}\n\nvar itemsA = [mmA1, mmB1, mmC1, mmD1, mmE1, mmF1, mmG1, mmH1, mmI1, mmA2, mmB2, mmC2, mmD2, mmE2, mmF2, mmG2, mmH2, mmI2, mmA3, mmB3, mmC3, mmD3, mmE3, mmF3, mmG3, mmH3, mmI3, mmA4, mmB4, mmC4, mmD4, mmE4, mmF4, mmG4, mmH4, mmI4];\n\nfunction random_itemB(itemsB)\n{\nreturn itemsB[Math.floor(Math.random()*itemsB.length)];\n}\n\nvar itemsB = [mmAA1, mmBB1, mmCC1, mmDD1, mmEE1, mmFF1, mmGG1, mmHH1, mmII1, mmAA2, mmBB2, mmCC2, mmDD2, mmEE2, mmFF2, mmGG2, mmHH2, mmII2, mmAA3, mmBB3, mmCC3, mmDD3, mmEE3, mmFF3, mmGG3, mmHH3, mmII3, mmAA4, mmBB4, mmCC4, mmDD4, mmEE4, mmFF4, mmGG4, mmHH4, mmII4];\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\nlet anFile = random_itemA(itemsA);\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile = random_itemA(itemsA);\n    anchorX = 0.125;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = random_itemB(itemsB);\n    anchorX = 0.071;\n    break;\n}\n\nlet anFile2 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):    \n    anFileSize = 1200;\n    anFile2 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile2 = random_itemB(itemsB);\n    break;\n}\n\nlet anFile3 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile3 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile3 = random_itemB(itemsB);\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=600){anScaleY = 0.6}\nif (anDist>=700 && anDist <=1200){anScaleY = 0.8}\nif (anDist>=1300 && anDist <=1800){anScaleY = 0.6}\nif (anDist>=1900){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim2 = \n                    {\n                     file: anFile2,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim3 = \n                    {\n                     file: anFile3,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n/// plays sounds at same interval as missiles\n/*\nfunction mm_audio(number){\n    let soundHome = \"sound folder path here\";\n    let soundFile = [\n        `sound file 1 here`,\n        `sound file 2 here`,\n        `sound file 2 here`\n    ];\n    let x = number;\n    let interval = 500;\n    for (var i = 0; i < x; i++) {\n        setTimeout(function () {\n            let random = Math.floor(Math.random() * (soundFile.length));\n            AudioHelper.play({src: soundHome + soundFile[random], volume: 0.3, autoplay: true, loop: false}, true);\n        }, i * interval);\n    }\n}\nmm_audio(3);\n*/\nawait wait(500);\ncanvas.fxmaster.playVideo(spellAnim2);\ngame.socket.emit('module.fxmaster', spellAnim2);\nawait wait(500);\ncanvas.fxmaster.playVideo(spellAnim3);\ngame.socket.emit('module.fxmaster', spellAnim3);\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n      }\n    }\n}];\nawait wait(10);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"OAAx1jKOg1dYBpA6","img":"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/MagicMissile_01_Regular_Green_Thumb.webp","actorIds":[],"_id":"TGkkRlBW99ZF3Njd"}
{"_id":"TwoLCvni7Yr2LfiT","name":"ThunderWaveBlue-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Bright_Blue_Bmid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Blue_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Bright_Blue_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Bright_Blue_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Bright_Blue_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Blue_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0x0075B0,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Bright_Blue_BMid_Thumb.webp","actorIds":[]}
{"_id":"Xl4ceYiVefS1ETTL","name":"ScorchingRayYellow","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.GXWRjdn1K8hfjAyP"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Yellow_Thumb.webp","actorIds":[]}
{"_id":"ZkG1TWF7C64wnd11","name":"MagicMissilePurple","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.x8jHCMPkE6bf3UCV"}},"scope":"global","command":"/// This macro pulls from the JB2A list of Purple Magic Missiles to throw 3 random animations at targeted tokens\n// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n// Sets files for random pulls\n// Base file path followed by file names\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/\";\nlet mmA = `${file}MagicMissile_01_Regular_Purple_30ft_01_1600x400.webm`;\nlet mmB = `${file}MagicMissile_01_Regular_Purple_30ft_02_1600x400.webm`;\nlet mmC = `${file}MagicMissile_01_Regular_Purple_30ft_03_1600x400.webm`;\nlet mmD = `${file}MagicMissile_01_Regular_Purple_30ft_04_1600x400.webm`;\nlet mmE = `${file}MagicMissile_01_Regular_Purple_30ft_05_1600x400.webm`;\nlet mmF = `${file}MagicMissile_01_Regular_Purple_30ft_06_1600x400.webm`;\nlet mmG = `${file}MagicMissile_01_Regular_Purple_30ft_07_1600x400.webm`;\nlet mmH = `${file}MagicMissile_01_Regular_Purple_30ft_08_1600x400.webm`;\nlet mmI = `${file}MagicMissile_01_Regular_Purple_30ft_09_1600x400.webm`;\n\nlet mmAA = `${file}MagicMissile_01_Regular_Purple_60ft_01_2800x400.webm`;\nlet mmBB = `${file}MagicMissile_01_Regular_Purple_60ft_02_2800x400.webm`;\nlet mmCC = `${file}MagicMissile_01_Regular_Purple_60ft_03_2800x400.webm`;\nlet mmDD = `${file}MagicMissile_01_Regular_Purple_60ft_04_2800x400.webm`;\nlet mmEE = `${file}MagicMissile_01_Regular_Purple_60ft_05_2800x400.webm`;\nlet mmFF = `${file}MagicMissile_01_Regular_Purple_60ft_06_2800x400.webm`;\nlet mmGG = `${file}MagicMissile_01_Regular_Purple_60ft_07_2800x400.webm`;\nlet mmHH = `${file}MagicMissile_01_Regular_Purple_60ft_08_2800x400.webm`;\nlet mmII = `${file}MagicMissile_01_Regular_Purple_60ft_09_2800x400.webm`;\n\nfunction random_itemA(itemsA)\n{\nreturn itemsA[Math.floor(Math.random()*itemsA.length)];\n}\n\nvar itemsA = [mmA, mmB, mmC, mmD, mmE, mmF, mmG, mmH, mmI];\n\nfunction random_itemB(itemsB)\n{\nreturn itemsB[Math.floor(Math.random()*itemsB.length)];\n}\n\nvar itemsB = [mmAA, mmBB, mmCC, mmDD, mmEE, mmFF, mmGG, mmHH, mmII];\nconst sleepNow = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\nlet anFile = random_itemA(itemsA);\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile = random_itemA(itemsA);\n    anchorX = 0.125;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = random_itemB(itemsB);\n    anchorX = 0.071;\n    break;\n}\n\nlet anFile2 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):    \n    anFileSize = 1200;\n    anFile2 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile2 = random_itemB(itemsB);\n    break;\n}\n\nlet anFile3 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile3 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile3 = random_itemB(itemsB);\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=600){anScaleY = 0.6}\nif (anDist>=700 && anDist <=1800){anScaleY = 0.8}\nif (anDist>1800 && anDist <=2000){anScaleY = 0.6}\nif (anDist>2000){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim2 = \n                    {\n                     file: anFile2,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim3 = \n                    {\n                     file: anFile3,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n/// plays sounds at same interval as missiles\n/*\nfunction mm_audio(number){\n    let soundHome = \"sound folder path here\";\n    let soundFile = [\n        `sound file 1 here`,\n        `sound file 2 here`,\n        `sound file 2 here`\n    ];\n    let x = number;\n    let interval = 500;\n    for (var i = 0; i < x; i++) {\n        setTimeout(function () {\n            let random = Math.floor(Math.random() * (soundFile.length));\n            AudioHelper.play({src: soundHome + soundFile[random], volume: 0.3, autoplay: true, loop: false}, true);\n        }, i * interval);\n    }\n}\nmm_audio(3);\n*/\nawait sleepNow(500);\ncanvas.fxmaster.playVideo(spellAnim2);\ngame.socket.emit('module.fxmaster', spellAnim2);\nawait sleepNow(500);\ncanvas.fxmaster.playVideo(spellAnim3);\ngame.socket.emit('module.fxmaster', spellAnim3);\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n      }\n    }\n}];\nawait sleepNow(10);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait sleepNow(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/MagicMissile_01_Regular_Purple_Thumb.webp","actorIds":[]}
{"_id":"a756WSxilkRzytTC","name":"HealingBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.rmvUlKiTed1tYSrl"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Blue_200x200.webm\",\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0x107BD9,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Blue_Thumb.webp","actorIds":[]}
{"_id":"bADp0GyE95CrKXuW","name":"MagicMissileYellow","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.x8jHCMPkE6bf3UCV"}},"scope":"global","command":"/// This macro pulls from the JB2A list of Yellow Magic Missiles to throw 3 random animations at targeted tokens\n// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n// Sets files for random pulls\n// Base file path followed by file names\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/\";\nlet mmA = `${file}MagicMissile_01_Regular_Yellow_30ft_01_1600x400.webm`;\nlet mmB = `${file}MagicMissile_01_Regular_Yellow_30ft_02_1600x400.webm`;\nlet mmC = `${file}MagicMissile_01_Regular_Yellow_30ft_03_1600x400.webm`;\nlet mmD = `${file}MagicMissile_01_Regular_Yellow_30ft_04_1600x400.webm`;\nlet mmE = `${file}MagicMissile_01_Regular_Yellow_30ft_05_1600x400.webm`;\nlet mmF = `${file}MagicMissile_01_Regular_Yellow_30ft_06_1600x400.webm`;\nlet mmG = `${file}MagicMissile_01_Regular_Yellow_30ft_07_1600x400.webm`;\nlet mmH = `${file}MagicMissile_01_Regular_Yellow_30ft_08_1600x400.webm`;\nlet mmI = `${file}MagicMissile_01_Regular_Yellow_30ft_09_1600x400.webm`;\n\nlet mmAA = `${file}MagicMissile_01_Regular_Yellow_60ft_01_2800x400.webm`;\nlet mmBB = `${file}MagicMissile_01_Regular_Yellow_60ft_02_2800x400.webm`;\nlet mmCC = `${file}MagicMissile_01_Regular_Yellow_60ft_03_2800x400.webm`;\nlet mmDD = `${file}MagicMissile_01_Regular_Yellow_60ft_04_2800x400.webm`;\nlet mmEE = `${file}MagicMissile_01_Regular_Yellow_60ft_05_2800x400.webm`;\nlet mmFF = `${file}MagicMissile_01_Regular_Yellow_60ft_06_2800x400.webm`;\nlet mmGG = `${file}MagicMissile_01_Regular_Yellow_60ft_07_2800x400.webm`;\nlet mmHH = `${file}MagicMissile_01_Regular_Yellow_60ft_08_2800x400.webm`;\nlet mmII = `${file}MagicMissile_01_Regular_Yellow_60ft_09_2800x400.webm`;\n\nfunction random_itemA(itemsA)\n{\nreturn itemsA[Math.floor(Math.random()*itemsA.length)];\n}\n\nvar itemsA = [mmA, mmB, mmC, mmD, mmE, mmF, mmG, mmH, mmI];\n\nfunction random_itemB(itemsB)\n{\nreturn itemsB[Math.floor(Math.random()*itemsB.length)];\n}\n\nvar itemsB = [mmAA, mmBB, mmCC, mmDD, mmEE, mmFF, mmGG, mmHH, mmII];\nconst sleepNow = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\nlet anFile = random_itemA(itemsA);\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile = random_itemA(itemsA);\n    anchorX = 0.125;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = random_itemB(itemsB);\n    anchorX = 0.071;\n    break;\n}\n\nlet anFile2 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):    \n    anFileSize = 1200;\n    anFile2 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile2 = random_itemB(itemsB);\n    break;\n}\n\nlet anFile3 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile3 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile3 = random_itemB(itemsB);\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=600){anScaleY = 0.6}\nif (anDist>=700 && anDist <=1800){anScaleY = 0.8}\nif (anDist>1800 && anDist <=2000){anScaleY = 0.6}\nif (anDist>2000){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim2 = \n                    {\n                     file: anFile2,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim3 = \n                    {\n                     file: anFile3,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n/// plays sounds at same interval as missiles\n/*\nfunction mm_audio(number){\n    let soundHome = \"sound folder path here\";\n    let soundFile = [\n        `sound file 1 here`,\n        `sound file 2 here`,\n        `sound file 2 here`\n    ];\n    let x = number;\n    let interval = 500;\n    for (var i = 0; i < x; i++) {\n        setTimeout(function () {\n            let random = Math.floor(Math.random() * (soundFile.length));\n            AudioHelper.play({src: soundHome + soundFile[random], volume: 0.3, autoplay: true, loop: false}, true);\n        }, i * interval);\n    }\n}\nmm_audio(3);\n*/\nawait sleepNow(500);\ncanvas.fxmaster.playVideo(spellAnim2);\ngame.socket.emit('module.fxmaster', spellAnim2);\nawait sleepNow(500);\ncanvas.fxmaster.playVideo(spellAnim3);\ngame.socket.emit('module.fxmaster', spellAnim3);\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n      }\n    }\n}];\nawait sleepNow(10);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait sleepNow(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/MagicMissile_01_Regular_Yellow_Thumb.webp","actorIds":[]}
{"_id":"bLk3viVraC41iuq1","name":"RayofFrost_PurpleTeal","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kF8eK7oJEvOgkL4B"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}RayOfFrost_01_Regular_PurpleTeal_15ft_1000x200.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}RayOfFrost_01_Regular_PurpleTeal_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}RayOfFrost_01_Regular_PurpleTeal_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}RayOfFrost_01_Regular_PurpleTeal_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=300){anScaleY = 0.7}\nif (anDist>=400 && anDist<=600){anScaleY = anScale*0.9}\nif (anDist>=700 && anDist<=900){anScaleY = 0.8}\nif (anDist>=1000 && anDist<=1200){anScaleY = anScale*0.9}\nif (anDist>=1300 && anDist<=1500){anScaleY = 0.6}\nif (anDist>=1600 && anDist<=1800){anScaleY = 0.8}\nif (anDist>=1800){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"mySuperFrost\",\n// Can change color in hex format\n    color: 0x0A50E7,\n    time: 0,\n    blend: 5,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: true,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/RayOfFrost_01_Regular_PurpleTeal_Thumb.webp","actorIds":[]}
{"_id":"buoHUEOqeuu6npJE","name":"CureWoundsBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.rmvUlKiTed1tYSrl"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Blue_200x200.webm\",\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0x107BD9,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Blue_Thumb.webp","actorIds":[]}
{"_id":"by7t4KSXcEtT7fBT","name":"WitchboltGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gpF9ZmXjY7TSQZXY"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/\";\n\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}WitchBolt_01_Regular_Green_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}WitchBolt_01_Regular_Green_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}WitchBolt_01_Regular_Green_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\nlet params =\n[{\n    filterType: \"electric\",\n// Can change color in hex format\n    color: 0x500087,\n    time: 0,\n    blend: 2,\n    intensity: 5,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n    let interval = 4000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n// Add Sound in the loop\n/*\n               let soundFile = `sound path and file here`;\n               AudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n         }, i * interval);\n    }\nawait wait (interval * x);\n// Removes TMFX after animation loops\n/*\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n// The number in parenthesis sets the number of times the animation loops\nSpellAnimation(1)\n\n// Adds TMFX to target\n/*\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/WitchBolt_01_Regular_Green_Thumb.webp","actorIds":[]}
{"_id":"crRbF78lcLwYCsoD","name":"CureWoundsPurple","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.iGReR2BY5qlkScKM"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Purple_200x200.webm\",\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0x9400CB,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Purple_Thumb.webp","actorIds":[]}
{"_id":"dMgnenmewIMgPM8Q","name":"WitchboltDarkPurple","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gpF9ZmXjY7TSQZXY"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/\";\n\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}WitchBolt_01_Dark_Purple_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}WitchBolt_01_Dark_Purple_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}WitchBolt_01_Dark_Purple_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\nlet params =\n[{\n    filterType: \"electric\",\n// Can change color in hex format\n    color: 0x500087,\n    time: 0,\n    blend: 2,\n    intensity: 5,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n    let interval = 4000;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n// Add Sound in the loop\n/*\n               let soundFile = `sound path and file here`;\n               AudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n         }, i * interval);\n    }\nawait wait (interval * x);\n// Removes TMFX after animation loops\n/*\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n// The number in parenthesis sets the number of times the animation loops\nSpellAnimation(1)\n\n// Adds TMFX to target\n/*\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Witch_Bolt/WitchBolt_01_Dark_Purple_Thumb.webp","actorIds":[]}
{"_id":"e4ESNGhaLlZky442","name":"CureWoundsGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.EjC0MuSVg8VhSSjw"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Green_200x200.webm\",\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0x7BDA35,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Green_Thumb.webp","actorIds":[]}
{"_id":"e6529cd5oJa5X9S4","name":"RayofFrost_BlueYellow","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.hSQepxGUYc3OWIBg"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}RayOfFrost_01_Regular_BlueYellow_15ft_1000x200.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}RayOfFrost_01_Regular_BlueYellow_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}RayOfFrost_01_Regular_BlueYellow_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}RayOfFrost_01_Regular_BlueYellow_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=300){anScaleY = 0.7}\nif (anDist>=400 && anDist<=600){anScaleY = anScale*0.9}\nif (anDist>=700 && anDist<=900){anScaleY = 0.8}\nif (anDist>=1000 && anDist<=1200){anScaleY = anScale*0.9}\nif (anDist>=1300 && anDist<=1500){anScaleY = 0.6}\nif (anDist>=1600 && anDist<=1800){anScaleY = 0.8}\nif (anDist>=1800){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"mySuperFrost\",\n// Can change color in hex format\n    color: 0x0A50E7,\n    time: 0,\n    blend: 5,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: true,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/RayOfFrost_01_Regular_BlueYellow_Thumb.webp","actorIds":[]}
{"_id":"i8zGwHmrPDo30GWH","name":"MagicMissileGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.x8jHCMPkE6bf3UCV"}},"scope":"global","command":"/// This macro pulls from the JB2A list of Green Magic Missiles to throw 3 random animations at targeted tokens\n// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\n// Sets files for random pulls\n// Base file path followed by file names\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/\";\nlet mmA = `${file}MagicMissile_01_Regular_Green_30ft_01_1600x400.webm`;\nlet mmB = `${file}MagicMissile_01_Regular_Green_30ft_02_1600x400.webm`;\nlet mmC = `${file}MagicMissile_01_Regular_Green_30ft_03_1600x400.webm`;\nlet mmD = `${file}MagicMissile_01_Regular_Green_30ft_04_1600x400.webm`;\nlet mmE = `${file}MagicMissile_01_Regular_Green_30ft_05_1600x400.webm`;\nlet mmF = `${file}MagicMissile_01_Regular_Green_30ft_06_1600x400.webm`;\nlet mmG = `${file}MagicMissile_01_Regular_Green_30ft_07_1600x400.webm`;\nlet mmH = `${file}MagicMissile_01_Regular_Green_30ft_08_1600x400.webm`;\nlet mmI = `${file}MagicMissile_01_Regular_Green_30ft_09_1600x400.webm`;\n\nlet mmAA = `${file}MagicMissile_01_Regular_Green_60ft_01_2800x400.webm`;\nlet mmBB = `${file}MagicMissile_01_Regular_Green_60ft_02_2800x400.webm`;\nlet mmCC = `${file}MagicMissile_01_Regular_Green_60ft_03_2800x400.webm`;\nlet mmDD = `${file}MagicMissile_01_Regular_Green_60ft_04_2800x400.webm`;\nlet mmEE = `${file}MagicMissile_01_Regular_Green_60ft_05_2800x400.webm`;\nlet mmFF = `${file}MagicMissile_01_Regular_Green_60ft_06_2800x400.webm`;\nlet mmGG = `${file}MagicMissile_01_Regular_Green_60ft_07_2800x400.webm`;\nlet mmHH = `${file}MagicMissile_01_Regular_Green_60ft_08_2800x400.webm`;\nlet mmII = `${file}MagicMissile_01_Regular_Green_60ft_09_2800x400.webm`;\n\nfunction random_itemA(itemsA)\n{\nreturn itemsA[Math.floor(Math.random()*itemsA.length)];\n}\n\nvar itemsA = [mmA, mmB, mmC, mmD, mmE, mmF, mmG, mmH, mmI];\n\nfunction random_itemB(itemsB)\n{\nreturn itemsB[Math.floor(Math.random()*itemsB.length)];\n}\n\nvar itemsB = [mmAA, mmBB, mmCC, mmDD, mmEE, mmFF, mmGG, mmHH, mmII];\nconst sleepNow = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n\nlet anFile = random_itemA(itemsA);\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile = random_itemA(itemsA);\n    anchorX = 0.125;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = random_itemB(itemsB);\n    anchorX = 0.071;\n    break;\n}\n\nlet anFile2 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):    \n    anFileSize = 1200;\n    anFile2 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile2 = random_itemB(itemsB);\n    break;\n}\n\nlet anFile3 = random_itemA(itemsA);\nswitch(true){\n case (anDist<=1800):\n    anFileSize = 1200;\n    anFile3 = random_itemA(itemsA);\n    break;\n default:\n    anFileSize = 2400;\n    anFile3 = random_itemB(itemsB);\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=600){anScaleY = 0.6}\nif (anDist>=700 && anDist <=1800){anScaleY = 0.8}\nif (anDist>1800 && anDist <=2000){anScaleY = 0.6}\nif (anDist>2000){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim2 = \n                    {\n                     file: anFile2,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \nlet spellAnim3 = \n                    {\n                     file: anFile3,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n/// plays sounds at same interval as missiles\n/*\nfunction mm_audio(number){\n    let soundHome = \"sound folder path here\";\n    let soundFile = [\n        `sound file 1 here`,\n        `sound file 2 here`,\n        `sound file 2 here`\n    ];\n    let x = number;\n    let interval = 500;\n    for (var i = 0; i < x; i++) {\n        setTimeout(function () {\n            let random = Math.floor(Math.random() * (soundFile.length));\n            AudioHelper.play({src: soundHome + soundFile[random], volume: 0.3, autoplay: true, loop: false}, true);\n        }, i * interval);\n    }\n}\nmm_audio(3);\n*/\nawait sleepNow(500);\ncanvas.fxmaster.playVideo(spellAnim2);\ngame.socket.emit('module.fxmaster', spellAnim2);\nawait sleepNow(500);\ncanvas.fxmaster.playVideo(spellAnim3);\ngame.socket.emit('module.fxmaster', spellAnim3);\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n      }\n    }\n}];\nawait sleepNow(10);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait sleepNow(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Magic_Missile/MagicMissile_01_Regular_Green_Thumb.webp","actorIds":[]}
{"_id":"iMqokEAkmRXQcHjZ","name":"FireBoltOrange","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.IFqH7vNJVcGZzGWe"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}FireBolt_01_Regular_Orange_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}FireBolt_01_Regular_Orange_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}FireBolt_01_Regular_Orange_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}FireBolt_01_Regular_Orange_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xFF9309,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/FireBolt_01_Regular_Orange_Thumb.webp","actorIds":[]}
{"_id":"knBb6UgzuxKKs4FN","name":"ThunderWaveOrange-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Bright_Orange_Bmid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Orange_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Bright_Orange_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Bright_Orange_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Bright_Orange_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Orange_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xD17506,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Bright_Orange_BMid_Thumb.webp","actorIds":[]}
{"_id":"lwAn81gEvzFAby2B","name":"ThunderWaveGreen-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Bright_Green_Bmid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Green_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Bright_Green_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Bright_Green_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Bright_Green_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Green_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0x15CA00,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Bright_Green_BMid_Thumb.webp","actorIds":[]}
{"_id":"osx9RBiUjsWOwXwl","name":"DisintegrateDarkRed","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.OVIfKxvNI1wrK8kb"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/6th_Level/Disintegrate/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}Disintegrate_01_Dark_Red_15ft_1000x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}Disintegrate_01_Dark_Red_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}Disintegrate_01_Dark_Red_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}Disintegrate_01_Dark_Red_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"fire\",\n    filterId: \"myFire\",\n    intensity: 3,\n    color: 0xFFFFFF,\n    amplitude: 2,\n    time: 0,\n    blend: 10,\n    fireBlend : 1,\n    alphaDiscard: true,\n    zOrder: 50,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0024, \n        animType: \"move\" \n      }\n    }\n},{\n    filterType: \"glow\",\n    filterId: \"glowripples\",\n    outerStrength: 4,\n    innerStrength: 2,\n    color: 0x7A0000,\n    quality: 0.5,\n    padding: 10,\n    zOrder: 100,\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/6th_Level/Disintegrate/Disintegrate_01_Dark_Red_Thumb.webp","actorIds":[]}
{"_id":"sy1E2DRPItSZ3SHd","name":"HealingPurple","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.rmvUlKiTed1tYSrl"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Purple_200x200.webm\",\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0x9400CB,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Purple_Thumb.webp","actorIds":[]}
{"_id":"u1OTmrUhFEfRjsfu","name":"HealingRandom","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.rmvUlKiTed1tYSrl"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nlet file = \"modules/jb2a_patreon/Library/Generic/Healing/\";\n\nlet cw1 = `${file}HealingAbility_01_Blue_200x200.webm`;\nlet cw2 = `${file}HealingAbility_01_Green_200x200.webm`;\nlet cw3 = `${file}HealingAbility_01_Purple_200x200.webm`;\nlet cw4 = `${file}HealingAbility_01_Yellow_200x200.webm`;\n\nfunction random_item(items)\n{\nreturn items[Math.floor(Math.random()*items.length)];\n}\n\nvar items = [cw1, cw2, cw3, cw4];\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\nlet anFile = random_item(items);\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0x107BD9,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Generic/Healing/HealingAbility_01_Blue_Thumb.webp","actorIds":[]}
{"_id":"viu8KcNdfTkLrQZG","name":"FireBoltDarkRed","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.6FY3tZhHPGL575N9"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}FireBolt_01_Dark_Red_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}FireBolt_01_Dark_Red_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}FireBolt_01_Dark_Red_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}FireBolt_01_Dark_Red_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (300);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBB1414,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Fire_Bolt/FireBolt_01_Dark_Red_Thumb.webp","actorIds":[]}
{"_id":"w9QfgvMSosKUl7tl","name":"CureWoundsRandom","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.rmvUlKiTed1tYSrl"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nlet file = \"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/\";\n\nlet cw1 = `${file}CureWounds_01_Blue_200x200.webm`;\nlet cw2 = `${file}CureWounds_01_Green_200x200.webm`;\nlet cw3 = `${file}CureWounds_01_Purple_200x200.webm`;\nlet cw4 = `${file}CureWounds_01_Red_200x200.webm`;\n\nfunction random_item(items)\n{\nreturn items[Math.floor(Math.random()*items.length)];\n}\n\nvar items = [cw1, cw2, cw3, cw4];\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\nlet anFile = random_item(items);\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0x107BD9,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Blue_Thumb.webp","actorIds":[]}
{"_id":"wZQtWJmZ0lq272o2","name":"ScorchingRayPurple","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.mhed01XPf845mPWq"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Purple_Thumb.webp","actorIds":[]}
{"_id":"zsAipCrDkVzNEZDd","name":"CureWoundsRed","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.E0aoVOQEx13vGnfC"}},"scope":"global","command":"// Requires a Target to be targeted\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires FX Master module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\n\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\n// Loops for multiple targets\nfor (var i = 0; i < arrayLength; i++) {\n// Plays on targeted tokens\nlet mainTarget = Array.from(game.user.targets)[i];\n// Scaled by Target Size\nlet tarScale = ((mainTarget.data.width + mainTarget.data.height)/2);\n// Comment out above and use the below line to scale globally for size consistency. Alter divisor to change animation size\n// let tarScale = canvas.scene.data.grid/100;\n\n// Comment out above and activate below to change to cast on Selected tokens instead of Targeted tokens\n/*\nvar myStringArray = Array.from(canvas.tokens.controlled);\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i < arrayLength; i++) {\nlet mainTarget = myStringArray[i];\nlet tarScale = canvas.scene.data.grid/100;\n*/\n\n// Defining spell animation for FX Master\nlet spellAnim = \n                    {\n                     file: \"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Red_200x200.webm\",\n                      position: mainTarget.center,\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: 0,\n                      scale: {\n                       x: tarScale,\n                       y: tarScale\n                      }\n                    }; \ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Or play random sounds\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n   filterType: \"outline\",\n   filterId: \"myOutline\",\n   padding: 10,\n// Change color in hex format\n   color: 0xE12C2C,\n   thickness: 1,\n   quality: 5,\n   zOrder: 9,\n   autoDestroy: true,\n   animated :\n   {\n      thickness: \n      { \n         active: true,\n         loopDuration: 800,\n         loops: 4,\n         animType: \"syncCosOscillation\",\n         val1: 1, \n         val2: 6\n      }\n   }\n}];\n\nTokenMagic.addUpdateFiltersOnTargeted(params);\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Cure_Wounds/CureWounds_01_Red_Thumb.webp","actorIds":[]}
{"_id":"HVH4ItZYPujHyG1c","name":"RayofFrost_Blue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"furnace":{"runAsGM":false},"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Macro.IHti68rYGIVejpF9"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}RayOfFrost_01_Regular_Blue_15ft_1000x200.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}RayOfFrost_01_Regular_Blue_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}RayOfFrost_01_Regular_Blue_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}RayOfFrost_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=300){anScaleY = 0.7}\nif (anDist>=400 && anDist<=600){anScaleY = anScale*0.9}\nif (anDist>=700 && anDist<=900){anScaleY = 0.8}\nif (anDist>=1000 && anDist<=1200){anScaleY = anScale*0.9}\nif (anDist>=1300 && anDist<=1500){anScaleY = 0.6}\nif (anDist>=1600 && anDist<=1800){anScaleY = 0.8}\nif (anDist>=1800){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"mySuperFrost\",\n// Can change color in hex format\n    color: 0x0A50E7,\n    time: 0,\n    blend: 5,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: true,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/RayOfFrost_01_Regular_Blue_Thumb.webp","actorIds":[]}
{"_id":"e6529cd5oJa5X9S4","name":"RayofFrost_BlueYellow","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.hSQepxGUYc3OWIBg"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}RayOfFrost_01_Regular_BlueYellow_15ft_1000x200.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}RayOfFrost_01_Regular_BlueYellow_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}RayOfFrost_01_Regular_BlueYellow_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}RayOfFrost_01_Regular_BlueYellow_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=300){anScaleY = 0.7}\nif (anDist>=400 && anDist<=600){anScaleY = anScale*0.9}\nif (anDist>=700 && anDist<=900){anScaleY = 0.8}\nif (anDist>=1000 && anDist<=1200){anScaleY = anScale*0.9}\nif (anDist>=1300 && anDist<=1500){anScaleY = 0.6}\nif (anDist>=1600 && anDist<=1800){anScaleY = 0.8}\nif (anDist>=1800){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"mySuperFrost\",\n// Can change color in hex format\n    color: 0x0A50E7,\n    time: 0,\n    blend: 5,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: true,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/RayOfFrost_01_Regular_BlueYellow_Thumb.webp","actorIds":[]}
{"_id":"Kn77HgEwUwqbfYjH","name":"RayofFrost_Green","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.Uu3yhrmEszGEMoPL"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}RayOfFrost_01_Regular_Green_15ft_1000x200.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.2;\nswitch(true){\n case (anDist<=600):\n    anFileSize = 600;\n    anFile = `${file}RayOfFrost_01_Regular_Green_15ft_1000x400.webm`;\n    anchorX = 0.2;\n    break;\n case (anDist>1200):\n    anFileSize = 1800;\n    anFile = `${file}RayOfFrost_01_Regular_Green_45ft_2200x400.webm`;\n    anchorX = 0.091;\n    break;\n default:\n    anFileSize = 1200;\n    anFile = `${file}RayOfFrost_01_Regular_Green_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n}\n// Scaling the Height of the animation for consistency across ranges\nlet anScale = anDist / anFileSize;\nlet anScaleY = anScale;\nif (anDist<=300){anScaleY = 0.7}\nif (anDist>=400 && anDist<=600){anScaleY = anScale*0.9}\nif (anDist>=700 && anDist<=900){anScaleY = 0.8}\nif (anDist>=1000 && anDist<=1200){anScaleY = anScale*0.9}\nif (anDist>=1300 && anDist<=1500){anScaleY = 0.6}\nif (anDist>=1600 && anDist<=1800){anScaleY = 0.8}\nif (anDist>=1800){anScaleY = anScale}\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"mySuperFrost\",\n// Can change color in hex format\n    color: 0x0A50E7,\n    time: 0,\n    blend: 5,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: true,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0020, \n        animType: \"move\" \n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/Cantrip/Ray_Of_Frost/RayOfFrost_01_Regular_Green_Thumb.webp","actorIds":[]}
{"_id":"AHZwEfZlbfLDdFFE","name":"ScorchingRayBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.oswp8Yd1TnpqUy8m"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Blue_Thumb.webp","actorIds":[]}
{"_id":"AHZwEfZlbfLDdFFE","name":"ScorchingRayBlue","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.oswp8Yd1TnpqUy8m"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Blue_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Blue_Thumb.webp","actorIds":[]}
{"_id":"0EkcYiYSFXvCzzzT","name":"ScorchingRayGreen","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.5HM0LaKi9P8LmFqo"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Green_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Green_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Green_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Green_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Green_Thumb.webp","actorIds":[]}
{"_id":"MsN81FpuQ4TYNmGT","name":"ScorchingRayOrange","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.gIoSflSeJaks3RgN"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Orange_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Orange_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Orange_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Orange_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Orange_Thumb.webp","actorIds":[]}
{"_id":"wZQtWJmZ0lq272o2","name":"ScorchingRayPurple","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.mhed01XPf845mPWq"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Purple_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Purple_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Purple_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Purple_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Purple_Thumb.webp","actorIds":[]}
{"_id":"3SxuruGRhWf3RKwv","name":"ScorchingRayRed","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.RhMcTwX75ptJmodT"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Red_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Red_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Red_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Red_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Red_Thumb.webp","actorIds":[]}
{"_id":"Xl4ceYiVefS1ETTL","name":"ScorchingRayYellow","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.GXWRjdn1K8hfjAyP"}},"scope":"global","command":"// Requires at least 1 target\nif(game.user.targets.size == 0) ui.notifications.error('You must target at least one token');\n// Requires token to be selected\nif(canvas.tokens.controlled.length == 0) ui.notifications.error(\"Please select your token\");\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\nasync function Cast() {\nvar myStringArray = Array.from(game.user.targets)[0];\nvar arrayLength = game.user.targets.size;\nfor (var i = 0; i < arrayLength; i++) {\n\nlet mainTarget = Array.from(game.user.targets)[i];\nlet myToken = canvas.tokens.controlled [0];\n\nlet ray = new Ray(myToken.center, mainTarget.center);\nlet anDeg = -(ray.angle * 57.3);\nlet anDist = ray.distance;\n// Animation file path\nlet file = \"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/\";\n// Checking for range to target to choose which file to pull\nlet anFile = `${file}ScorchingRay_01_Regular_Yellow_30ft_1600x400.webm`;\nlet anFileSize = 600;\nlet anchorX = 0.125;\nswitch(true){\n case (anDist<=1600):\n    anFileSize = 1200;\n    anFile = `${file}ScorchingRay_01_Regular_Yellow_30ft_1600x400.webm`;\n    anchorX = 0.125;\n    break;\n case (anDist>4000):\n    anFileSize = 3600;\n    anFile = `${file}ScorchingRay_01_Regular_Yellow_90ft_4000x400.webm`;\n    anchorX = 0.05;\n    break;\n default:\n    anFileSize = 2400;\n    anFile = `${file}ScorchingRay_01_Regular_Yellow_60ft_2800x400.webm`;\n    anchorX = 0.071;\n    break;\n}\n\nlet anScale = anDist / anFileSize;\nlet anScaleY = anDist <= 600 ? 0.6  : anScale;\n\nlet spellAnim = \n                    {\n                     file: anFile,\n                      position: myToken.center,\n                      anchor: {\n                       x: anchorX,\n                       y: 0.5\n                      },\n                      angle: anDeg,\n                      scale: {\n                       x: anScale,\n                       y: anScaleY\n                      }\n                    }; \n\ncanvas.fxmaster.playVideo(spellAnim);\ngame.socket.emit('module.fxmaster', spellAnim);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n// Or play random sounds on each attack\n/*\nlet soundHome = \"CustomSounds/battle/\";\n\nlet m1 = `sound 01 file location here`;\nlet m2 = `sound 02 file location here`;\nfunction random_sound(sounds)\n{\nreturn sounds[Math.floor(Math.random()*sounds.length)];\n}\n\nvar sounds = [m1, m2];\n\nlet roll = new Roll('1d3').roll().total;\nlet soundFile = random_sound(sounds);\nAudioHelper.play({src: soundHome + soundFile, volume: 0.9, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed\n/*\nlet params =\n[{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Can change color in hex format\n    color: 0xBBDDEE,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    autoDestroy: true,\n    animated :\n    {\n      time: \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\"\n      }\n       \n    }\n}];\nawait wait(1000);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(2000);\nTokenMagic.deleteFiltersOnTargeted();\n*/\n}\n}\nCast ()","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/2nd_Level/Scorching_Ray/ScorchingRay_01_Regular_Yellow_Thumb.webp","actorIds":[]}
{"_id":"TwoLCvni7Yr2LfiT","name":"ThunderWaveBlue-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Bright_Blue_BMid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Blue_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Bright_Blue_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Bright_Blue_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Bright_Blue_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Blue_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0x0075B0,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Bright_Blue_BMid_Thumb.webp","actorIds":[]}
{"_id":"lwAn81gEvzFAby2B","name":"ThunderWaveGreen-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Bright_Green_BMid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Green_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Bright_Green_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Bright_Green_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Bright_Green_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Green_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0x15CA00,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Bright_Green_BMid_Thumb.webp","actorIds":[]}
{"_id":"knBb6UgzuxKKs4FN","name":"ThunderWaveOrange-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Bright_Orange_BMid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Orange_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Bright_Orange_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Bright_Orange_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Bright_Orange_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Bright_Orange_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xD17506,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Bright_Orange_BMid_Thumb.webp","actorIds":[]}
{"_id":"C7urHUvHi4VEO2rb","name":"ThunderWavePurple-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Dark_Purple_BMid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Dark_Purple_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Dark_Purple_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Dark_Purple_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Dark_Purple_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Dark_Purple_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xA90092,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Dark_Purple_BMid_Thumb.webp","actorIds":[]}
{"_id":"6IthTcNkAUvXcl27","name":"ThunderWaveRed-MIDI","permission":{"default":0,"ccsO3NtPJs2xE1RS":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.kS1ln3yiGgUOI7lx"}},"scope":"global","command":"// REQUIRES MIDI-QOL & FURNACE TO WORK CORRECTLY\n// Positional Macro for Thunderwave. Reads the Token Position around and inside the template to choose which animation to play.\n// Requires FX Master Module\nif (!canvas.fxmaster) ui.notifications.error(\"This macro depends on the FXMaster module. Make sure it is installed and enabled\");\n\nconst lastArg = args[args.length - 1];\nconst castingToken = canvas.tokens.get(lastArg.tokenId)\nlet item = lastArg.item;\n\nconst wait = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n\n\n    const templateID = canvas.templates.placeables[canvas.templates.placeables.length - 1].data._id;\n    let template = await canvas.templates.get(templateID);\n    let gridSize = canvas.scene.data.grid;\n    let Scale = canvas.scene.data.grid/200;\n    let myToken = canvas.tokens.get(lastArg.tokenId) || canvas.tokens.placeables.find(token => token.actor.items.get(item._id) != null)\n    let file = \"modules/jb2a_patreon/Library/1st_Level/Thunderwave/\";\n\nlet anFile = `${file}Thunderwave_01_Dark_Red_BMid_600x600.webm`;\nlet ang = 0;\nswitch(true){\n   case ((myToken.data.x>=template.x && myToken.data.x<=(template.x + (gridSize *2))) && (myToken.data.y>=template.y && myToken.data.y<=(template.y + (gridSize *2)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Dark_Red_Center_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x - gridSize)) && (myToken.data.x<=(template.x - (gridSize * 0.5)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 270;\n      anFile = `${file}Thunderwave_01_Dark_Red_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x>=(template.x + (gridSize * 2.5))) && (myToken.data.x<=(template.x + (gridSize *3)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      anFile = `${file}Thunderwave_01_Dark_Red_BLeft_600x600.webm`;\n      break;\n   case (((myToken.data.x>=(template.x + (gridSize * 2.5))) && myToken.data.x<=(template.x + (gridSize * 3))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5))))):\n      ang = 90;\n      anFile = `${file}Thunderwave_01_Dark_Red_BLeft_600x600.webm`;\n      break;\n   case ((myToken.data.x<=(template.x - (gridSize * 0.5))) && (myToken.data.x>=(template.x - gridSize))) && ((myToken.data.y<=(template.y + (gridSize * 3))) && (myToken.data.y>=(template.y + (gridSize * 2.5)))):\n      ang = 0;\n      anFile = `${file}Thunderwave_01_Dark_Red_BLeft_600x600.webm`;\n      break;\n   case (myToken.data.x==(template.x + (gridSize * 3))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 90;\n      break;\n   case ((myToken.data.x>=template.x) && (myToken.data.x<=(template.x + (gridSize * 2)))) && ((myToken.data.y>=(template.y - gridSize)) && (myToken.data.y<=(template.y - (gridSize * 0.5)))):\n      ang = 180;\n      break;\n   case ((myToken.data.x>=(template.x-gridSize)) && (myToken.data.x<=(template.x-(gridSize * 0.5)))) && ((myToken.data.y>=template.y) && myToken.data.y<=(template.y + (gridSize*2))):\n      ang = 270;\n      break;\n}\n   \n    let spellAnim = \n                    {\n                     file: anFile,\n                      position: {\n                       x: (template.x + (gridSize * 1.5)),\n                       y: (template.y + (gridSize * 1.5))\n                      },\n                      anchor: {\n                       x: 0.5,\n                       y: 0.5\n                      },\n                      angle: ang,\n                      scale: {\n                       x: Scale,\n                       y: Scale\n                      }\n                    };\n\nasync function SpellAnimation(number) {\n\n    let x = number;\n// This is the interval in between the start of each animation on the loop in milliseconds\n    let interval = 750;\n    for (var i = 0; i < x; i++) {\n         setTimeout(function() {\n             canvas.fxmaster.playVideo(spellAnim);\n             game.socket.emit('module.fxmaster', spellAnim);\n         }, i * interval);\n    }\n}\nSpellAnimation(3);\n\n// Add some sound\n/*\nawait wait (100);\nlet soundFile = `sound path here`;\nAudioHelper.play({src: soundFile, volume: 1.0, autoplay: true, loop: false}, true);\n*/\n\n// Delete comments to activate token Magic FX. Requires the Token Magic FX Modules to be installed, and Midi-qol Auto Target on Template placement\n/*\nlet params =\n[{\n    filterType: \"wave\",\n    filterId: \"myShockwave\",\n    time: 0,\n    strength: 0.03,\n    frequency: 15,\n    maxIntensity: 4.0,\n    minIntensity: 0.5,\n    padding:25,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: 0.0180,\n        animType: \"move\",\n       }\n    }\n},\n{\n    filterType: \"xfire\",\n    filterId: \"myColdXFire\",\n    time: 0,\n// Change color here in hex format\n    color: 0xC10000,\n    blend: 1,\n    amplitude: 1,\n    dispersion: 0,\n    chromatic: false,\n    scaleX: 1,\n    scaleY: 1,\n    inlay: false,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0015, \n        animType: \"move\" \n      }\n    }\n}];\nawait wait(500);\nTokenMagic.addUpdateFiltersOnTargeted(params);\nawait wait(3500);\nTokenMagic.deleteFiltersOnTargeted();\n*/","author":"ccsO3NtPJs2xE1RS","img":"modules/jb2a_patreon/Library/1st_Level/Thunderwave/Thunderwave_01_Dark_Red_BMid_Thumb.webp","actorIds":[]}
